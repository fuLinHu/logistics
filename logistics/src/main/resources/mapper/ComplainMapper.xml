<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aiwen.logistics.dao.ComplainMapper" >
  <resultMap id="BaseResultMap" type="com.aiwen.logistics.pojo.Complain" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orders_num" property="ordersNum" jdbcType="VARCHAR" />
    <result column="problem_description" property="problemDescription" jdbcType="VARCHAR" />
    <result column="detailed_description" property="detailedDescription" jdbcType="VARCHAR" />
    <result column="related_annexes" property="relatedAnnexes" jdbcType="VARCHAR"/>
    <result column="e_mail" property="eMail" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orders_num, problem_description, detailed_description, related_annexes, e_mail, order_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.ComplainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from complain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from complain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiwen.logistics.pojo.ComplainExample" >
    delete from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiwen.logistics.pojo.Complain" >
    insert into complain (id, orders_num, problem_description,
    detailed_description, related_annexes, e_mail, order_id
    )
    values (#{id,jdbcType=INTEGER}, #{ordersNum,jdbcType=VARCHAR}, #{problemDescription,jdbcType=VARCHAR},
    #{detailedDescription,jdbcType=VARCHAR}, #{relatedAnnexes,jdbcType=VARCHAR}, #{eMail,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.aiwen.logistics.pojo.Complain" >
    insert into complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ordersNum != null" >
        orders_num,
      </if>
      <if test="problemDescription != null" >
        problem_description,
      </if>
      <if test="detailedDescription != null" >
        detailed_description,
      </if>
      <if test="relatedAnnexes != null" >
        related_annexes,
      </if>
      <if test="eMail != null" >
        e_mail,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ordersNum != null" >
        #{ordersNum,jdbcType=VARCHAR},
      </if>
      <if test="problemDescription != null" >
        #{problemDescription,jdbcType=VARCHAR},
      </if>
      <if test="detailedDescription != null" >
        #{detailedDescription,jdbcType=VARCHAR},
      </if>
      <if test="relatedAnnexes != null" >
        #{relatedAnnexes,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null" >
        #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiwen.logistics.pojo.ComplainExample" resultType="java.lang.Integer" >
    select count(*) from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update complain
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ordersNum != null" >
        orders_num = #{record.ordersNum,jdbcType=VARCHAR},
      </if>
      <if test="record.problemDescription != null" >
        problem_description = #{record.problemDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.detailedDescription != null" >
        detailed_description = #{record.detailedDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.relatedAnnexes != null" >
        related_annexes = #{record.relatedAnnexes,jdbcType=VARCHAR},
      </if>
      <if test="record.eMail != null" >
        e_mail = #{record.eMail,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update complain
    set id = #{record.id,jdbcType=INTEGER},
    orders_num = #{record.ordersNum,jdbcType=VARCHAR},
    problem_description = #{record.problemDescription,jdbcType=VARCHAR},
    detailed_description = #{record.detailedDescription,jdbcType=VARCHAR},
    related_annexes = #{record.relatedAnnexes,jdbcType=VARCHAR},
    e_mail = #{record.eMail,jdbcType=VARCHAR},
    order_id = #{record.orderId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiwen.logistics.pojo.Complain" >
    update complain
    <set >
      <if test="ordersNum != null" >
        orders_num = #{ordersNum,jdbcType=VARCHAR},
      </if>
      <if test="problemDescription != null" >
        problem_description = #{problemDescription,jdbcType=VARCHAR},
      </if>
      <if test="detailedDescription != null" >
        detailed_description = #{detailedDescription,jdbcType=VARCHAR},
      </if>
      <if test="relatedAnnexes != null" >
        related_annexes = #{record.relatedAnnexes,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null" >
        e_mail = #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiwen.logistics.pojo.Complain" >
    update complain
    set orders_num = #{ordersNum,jdbcType=VARCHAR},
      problem_description = #{problemDescription,jdbcType=VARCHAR},
      detailed_description = #{detailedDescription,jdbcType=VARCHAR},
      related_annexes = #{record.relatedAnnexes,jdbcType=VARCHAR},
      e_mail = #{eMail,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.ComplainExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>