<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aiwen.logistics.dao.TransactionRecordMapper" >
  <resultMap id="BaseResultMap" type="com.aiwen.logistics.pojo.TransactionRecord" >
    <id column="transaction_record_id" property="transactionRecordId" jdbcType="INTEGER" />
    <result column="transaction_code" property="transactionCode" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="transaction_type" property="transactionType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="transaction_amount" property="transactionAmount" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    transaction_record_id, transaction_code, user_id, transaction_type, create_time, 
    transaction_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.TransactionRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from transaction_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from transaction_record
    where transaction_record_id = #{transactionRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from transaction_record
    where transaction_record_id = #{transactionRecordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiwen.logistics.pojo.TransactionRecordExample" >
    delete from transaction_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiwen.logistics.pojo.TransactionRecord" >
    insert into transaction_record (transaction_record_id, transaction_code, 
      user_id, transaction_type, create_time, 
      transaction_amount)
    values (#{transactionRecordId,jdbcType=INTEGER}, #{transactionCode,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{transactionType,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{transactionAmount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.aiwen.logistics.pojo.TransactionRecord" >
    insert into transaction_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transactionRecordId != null" >
        transaction_record_id,
      </if>
      <if test="transactionCode != null" >
        transaction_code,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="transactionType != null" >
        transaction_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="transactionAmount != null" >
        transaction_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transactionRecordId != null" >
        #{transactionRecordId,jdbcType=INTEGER},
      </if>
      <if test="transactionCode != null" >
        #{transactionCode,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="transactionType != null" >
        #{transactionType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null" >
        #{transactionAmount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiwen.logistics.pojo.TransactionRecordExample" resultType="java.lang.Integer" >
    select count(*) from transaction_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update transaction_record
    <set >
      <if test="record.transactionRecordId != null" >
        transaction_record_id = #{record.transactionRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.transactionCode != null" >
        transaction_code = #{record.transactionCode,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.transactionType != null" >
        transaction_type = #{record.transactionType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionAmount != null" >
        transaction_amount = #{record.transactionAmount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update transaction_record
    set transaction_record_id = #{record.transactionRecordId,jdbcType=INTEGER},
      transaction_code = #{record.transactionCode,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      transaction_type = #{record.transactionType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      transaction_amount = #{record.transactionAmount,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiwen.logistics.pojo.TransactionRecord" >
    update transaction_record
    <set >
      <if test="transactionCode != null" >
        transaction_code = #{transactionCode,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="transactionType != null" >
        transaction_type = #{transactionType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null" >
        transaction_amount = #{transactionAmount,jdbcType=DOUBLE},
      </if>
    </set>
    where transaction_record_id = #{transactionRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiwen.logistics.pojo.TransactionRecord" >
    update transaction_record
    set transaction_code = #{transactionCode,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      transaction_type = #{transactionType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      transaction_amount = #{transactionAmount,jdbcType=DOUBLE}
    where transaction_record_id = #{transactionRecordId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.TransactionRecordExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from transaction_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>