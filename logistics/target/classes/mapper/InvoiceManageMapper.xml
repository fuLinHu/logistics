<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aiwen.logistics.dao.InvoiceManageMapper" >
  <resultMap id="BaseResultMap" type="com.aiwen.logistics.pojo.InvoiceManage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="invoice_type" property="invoiceType" jdbcType="VARCHAR" />
    <result column="invoice_content" property="invoiceContent" jdbcType="VARCHAR" />
    <result column="invoice_title" property="invoiceTitle" jdbcType="VARCHAR" />
    <result column="identifier" property="identifier" jdbcType="VARCHAR" />
    <result column="contact_address" property="contactAddress" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="bank_information" property="bankInformation" jdbcType="VARCHAR" />
    <result column="recipient" property="recipient" jdbcType="VARCHAR" />
    <result column="write_phone" property="writePhone" jdbcType="VARCHAR" />
    <result column="recipient_address" property="recipientAddress" jdbcType="VARCHAR" />
    <result column="requisition_num" property="requisitionNum" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="invoice_flag" property="invoiceFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, invoice_type, invoice_content, invoice_title, identifier, contact_address, telephone, 
    bank_information, recipient, write_phone, recipient_address, requisition_num, created_time, 
    money, user_id, invoice_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.InvoiceManageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from invoice_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} DESC
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invoice_manage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invoice_manage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiwen.logistics.pojo.InvoiceManageExample" >
    delete from invoice_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiwen.logistics.pojo.InvoiceManage" >
    insert into invoice_manage (id, invoice_type, invoice_content, 
      invoice_title, identifier, contact_address, 
      telephone, bank_information, recipient, 
      write_phone, recipient_address, requisition_num, 
      created_time, money, user_id, 
      invoice_flag)
    values (#{id,jdbcType=INTEGER}, #{invoiceType,jdbcType=VARCHAR}, #{invoiceContent,jdbcType=VARCHAR}, 
      #{invoiceTitle,jdbcType=VARCHAR}, #{identifier,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{bankInformation,jdbcType=VARCHAR}, #{recipient,jdbcType=VARCHAR}, 
      #{writePhone,jdbcType=VARCHAR}, #{recipientAddress,jdbcType=VARCHAR}, #{requisitionNum,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{userId,jdbcType=INTEGER}, 
      #{invoiceFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aiwen.logistics.pojo.InvoiceManage" >
    insert into invoice_manage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="invoiceType != null" >
        invoice_type,
      </if>
      <if test="invoiceContent != null" >
        invoice_content,
      </if>
      <if test="invoiceTitle != null" >
        invoice_title,
      </if>
      <if test="identifier != null" >
        identifier,
      </if>
      <if test="contactAddress != null" >
        contact_address,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="bankInformation != null" >
        bank_information,
      </if>
      <if test="recipient != null" >
        recipient,
      </if>
      <if test="writePhone != null" >
        write_phone,
      </if>
      <if test="recipientAddress != null" >
        recipient_address,
      </if>
      <if test="requisitionNum != null" >
        requisition_num,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="invoiceFlag != null" >
        invoice_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceContent != null" >
        #{invoiceContent,jdbcType=VARCHAR},
      </if>
      <if test="invoiceTitle != null" >
        #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="identifier != null" >
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="bankInformation != null" >
        #{bankInformation,jdbcType=VARCHAR},
      </if>
      <if test="recipient != null" >
        #{recipient,jdbcType=VARCHAR},
      </if>
      <if test="writePhone != null" >
        #{writePhone,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null" >
        #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="requisitionNum != null" >
        #{requisitionNum,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="invoiceFlag != null" >
        #{invoiceFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiwen.logistics.pojo.InvoiceManageExample" resultType="java.lang.Integer" >
    select count(*) from invoice_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invoice_manage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceType != null" >
        invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceContent != null" >
        invoice_content = #{record.invoiceContent,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceTitle != null" >
        invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.identifier != null" >
        identifier = #{record.identifier,jdbcType=VARCHAR},
      </if>
      <if test="record.contactAddress != null" >
        contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.bankInformation != null" >
        bank_information = #{record.bankInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.recipient != null" >
        recipient = #{record.recipient,jdbcType=VARCHAR},
      </if>
      <if test="record.writePhone != null" >
        write_phone = #{record.writePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientAddress != null" >
        recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.requisitionNum != null" >
        requisition_num = #{record.requisitionNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceFlag != null" >
        invoice_flag = #{record.invoiceFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invoice_manage
    set id = #{record.id,jdbcType=INTEGER},
      invoice_type = #{record.invoiceType,jdbcType=VARCHAR},
      invoice_content = #{record.invoiceContent,jdbcType=VARCHAR},
      invoice_title = #{record.invoiceTitle,jdbcType=VARCHAR},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      contact_address = #{record.contactAddress,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      bank_information = #{record.bankInformation,jdbcType=VARCHAR},
      recipient = #{record.recipient,jdbcType=VARCHAR},
      write_phone = #{record.writePhone,jdbcType=VARCHAR},
      recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
      requisition_num = #{record.requisitionNum,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=INTEGER},
      invoice_flag = #{record.invoiceFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiwen.logistics.pojo.InvoiceManage" >
    update invoice_manage
    <set >
      <if test="invoiceType != null" >
        invoice_type = #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="invoiceContent != null" >
        invoice_content = #{invoiceContent,jdbcType=VARCHAR},
      </if>
      <if test="invoiceTitle != null" >
        invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      </if>
      <if test="identifier != null" >
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="contactAddress != null" >
        contact_address = #{contactAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="bankInformation != null" >
        bank_information = #{bankInformation,jdbcType=VARCHAR},
      </if>
      <if test="recipient != null" >
        recipient = #{recipient,jdbcType=VARCHAR},
      </if>
      <if test="writePhone != null" >
        write_phone = #{writePhone,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null" >
        recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="requisitionNum != null" >
        requisition_num = #{requisitionNum,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="invoiceFlag != null" >
        invoice_flag = #{invoiceFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiwen.logistics.pojo.InvoiceManage" >
    update invoice_manage
    set invoice_type = #{invoiceType,jdbcType=VARCHAR},
      invoice_content = #{invoiceContent,jdbcType=VARCHAR},
      invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
      identifier = #{identifier,jdbcType=VARCHAR},
      contact_address = #{contactAddress,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      bank_information = #{bankInformation,jdbcType=VARCHAR},
      recipient = #{recipient,jdbcType=VARCHAR},
      write_phone = #{writePhone,jdbcType=VARCHAR},
      recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      requisition_num = #{requisitionNum,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      invoice_flag = #{invoiceFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.aiwen.logistics.pojo.InvoiceManageExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from invoice_manage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="beforeInvoiceMessage" parameterType="INTEGER"  resultMap="BaseResultMap" >
    select * from  invoice_manage WHERE 1=1
    <if test="userId != null" >
     AND  user_id = #{userId}
    </if>
    ORDER BY created_time DESC
    LIMIT 0,1;
  </select>
</mapper>